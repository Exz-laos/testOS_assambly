     1                                  ;************************************************************************
     2                                  ;	BIOSでロードされる最初のセクタ
     3                                  ;	
     4                                  ;	プログラム全体を通して、セグメントの値は0x0000とする。
     5                                  ;	(DS==ES==0)
     6                                  ;	
     7                                  ;************************************************************************
     8                                  
     9                                  ;************************************************************************
    10                                  ;	マクロ
    11                                  ;************************************************************************
    12                                  %include	"../include/define.s"
     1                              <1> BOOT_LOAD    equ   0x7C00
     2                              <1> 
     3                              <1> BOOT_SIZE    equ   (1024* 8)
     4                              <1> SECT_SIZE    equ   (512)
     5                              <1> BOOT_SECT    equ   (BOOT_SIZE/SECT_SIZE)
     6                              <1> 
     7                              <1> 
     8                              <1> ;p.439
     9                              <1> ;E820_RECORD_SIZE   equ   20
    13                                  %include	"../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     %rep  %0 - 1
     3                              <1>         push   %{-1:-1}
     4                              <1>         %rotate -1
     5                              <1>     %endrep
     6                              <1>     %rotate -1
     7                              <1>         call    %1
     8                              <1>     %if 1 < %0
     9                              <1>         add    sp,(__BITS__>>3)*(%0 - 1)
    10                              <1>     %endif
    11                              <1> %endmacro
    12                              <1> 
    13                              <1>     struc drive
    14 00000000 ????                <1>           .no     resw  1
    15 00000002 ????                <1>           .cyln   resw  1
    16 00000004 ????                <1>           .head   resw  1
    17 00000006 ????                <1>           .sect   resw  1
    18                              <1>     endstruc
    19                              <1> 
    14                                  
    15                                  		ORG		BOOT_LOAD						; ロードアドレスをアセンブラに指示
    16                                  
    17                                  ;************************************************************************
    18                                  ;	エントリポイント
    19                                  ;************************************************************************
    20                                  entry:
    21                                  		;---------------------------------------
    22                                  		; BPB(BIOS Parameter Block)
    23                                  		;---------------------------------------
    24 00000000 EB58                    		jmp		ipl								; IPLへジャンプ
    25 00000002 90<rep 58h>             		times	90 - ($ - $$) db 0x90			; 
    26                                  
    27                                  		;---------------------------------------
    28                                  		; IPL(Initial Program Loader)
    29                                  		;---------------------------------------
    30                                  ipl:
    31 0000005A FA                      		cli										; // 割り込み禁止
    32                                  
    33 0000005B B80000                  		mov		ax, 0x0000						; AX = 0x0000;
    34 0000005E 8ED8                    		mov		ds, ax							; DS = 0x0000;
    35 00000060 8EC0                    		mov		es, ax							; ES = 0x0000;
    36 00000062 8ED0                    		mov		ss, ax							; SS = 0x0000;
    37 00000064 BC007C                  		mov		sp, BOOT_LOAD					; SP = 0x7C00;
    38                                  
    39 00000067 FB                      		sti										; // 割り込み許可
    40                                  
    41 00000068 8816[B800]              		mov		[BOOT + drive.no], dl			; ブートドライブを保存
    42                                  
    43                                  		;---------------------------------------
    44                                  		; 文字列を表示
    45                                  		;---------------------------------------
    46 0000006C 68[9900]E84E0083C4-     		cdecl	puts, .s0						; puts(.s0);
    46 00000074 02                 
    47                                  
    48                                  		;---------------------------------------
    49                                  		; 残りのセクタを全て読み込む
    50                                  		;---------------------------------------
    51 00000075 BB0F00                  		mov		bx, BOOT_SECT - 1				; BX = 残りのブートセクタ数;
    52 00000078 B9007E                  		mov		cx, BOOT_LOAD + SECT_SIZE		; CX = 次のロードアドレス;
    53                                  
    54 0000007B 515368[B800]E89B00-     		cdecl	read_chs, BOOT, bx, cx			; AX = read_chs(.chs, bx, cx);
    54 00000083 83C406             
    55                                  
    56 00000086 39D8                    		cmp		ax, bx							; if (AX != 残りのセクタ数)
    57 00000088 740C                    .10Q:	jz		.10E							; {
    58 0000008A 68[A600]E8300083C4-     .10T:	cdecl	puts, .e0						;   puts(.e0);
    58 00000092 02                 
    59 00000093 E84900                  		call	reboot							;   reboot(); // 再起動
    60                                  .10E:											; }
    61                                  
    62                                  		;---------------------------------------
    63                                  		; 次のステージへ移行
    64                                  		;---------------------------------------
    65 00000096 E94C02                  		jmp		stage_2							; ブート処理の第2ステージ
    66                                  
    67                                  		;---------------------------------------
    68                                  		; データ
    69                                  		;---------------------------------------
    70 00000099 426F6F74696E672E2E-     .s0		db	"Booting...", 0x0A, 0x0D, 0
    70 000000A2 2E0A0D00           
    71 000000A6 4572726F723A736563-     .e0		db	"Error:sector read", 0
    71 000000AF 746F72207265616400 
    72                                  
    73                                  ;************************************************************************
    74                                  ;	ブートドライブに関する情報
    75                                  ;************************************************************************
    76                                  ALIGN 2, db 0
    77                                  BOOT:											; ブートドライブに関する情報
    78                                  	istruc	drive
    79 000000B8 0000                    		at	drive.no,		dw	0				; ドライブ番号
    80 000000BA 0000                    		at	drive.cyln,		dw	0				; C:シリンダ
    81 000000BC 0000                    		at	drive.head,		dw	0				; H:ヘッド
    82 000000BE 0200                    		at	drive.sect,		dw	2				; S:セクタ
    83                                  	iend
    84                                  
    85                                  ;************************************************************************
    86                                  ;	モジュール
    87                                  ;************************************************************************
    88                                  %include	"../modules/real/puts.s"
     1                              <1> 
     2                              <1> puts:
     3                              <1> 
     4 000000C0 55                  <1>       push   bp
     5 000000C1 89E5                <1>       mov    bp, sp
     6                              <1> 
     7 000000C3 50                  <1>       push   ax
     8 000000C4 53                  <1>       push   bx
     9 000000C5 56                  <1>       push   si
    10                              <1>       
    11 000000C6 8B7604              <1>       mov    si, [bp + 4]
    12                              <1> 
    13 000000C9 B40E                <1>       mov    ah, 0x0E
    14 000000CB BB0000              <1>       mov    bx, 0x0000
    15 000000CE FC                  <1>       cld
    16                              <1> .10L:
    17 000000CF AC                  <1>       lodsb
    18                              <1> 
    19 000000D0 3C00                <1>       cmp    al, 0
    20 000000D2 7404                <1>       je     .10E
    21                              <1> 
    22 000000D4 CD10                <1>       int    0x10
    23 000000D6 EBF7                <1>       jmp    .10L
    24                              <1> .10E:
    25                              <1> 
    26 000000D8 5E                  <1>       pop    si
    27 000000D9 5B                  <1>       pop    bx
    28 000000DA 58                  <1>       pop    ax
    29                              <1> 
    30 000000DB 89EC                <1>       mov    sp, bp    
    31 000000DD 5D                  <1>       pop    bp
    32                              <1>       
    33 000000DE C3                  <1>       ret
    89                                  %include	"../modules/real/reboot.s"
     1                              <1> reboot:
     2 000000DF 68[FB00]E8DBFF83C4- <1>        cdecl puts,  .s0
     2 000000E7 02                  <1>
     3                              <1> 
     4                              <1> .10L: 
     5 000000E8 B410                <1>      mov     ah, 0x10
     6 000000EA CD16                <1>      int     0x16
     7                              <1> 
     8 000000EC 3C20                <1>      cmp     al, ' '
     9 000000EE 75F8                <1>      jne     .10L
    10                              <1> 
    11 000000F0 68[1901]E8CAFF83C4- <1>      cdecl   puts, .s1
    11 000000F8 02                  <1>
    12                              <1> 
    13 000000F9 CD19                <1>      int     0x19
    14                              <1> 
    15 000000FB 0A0D50757368205350- <1> .s0  db 0x0A, 0x0D, "Push SPACE ket to reboot...", 0
    15 00000104 414345206B65742074- <1>
    15 0000010D 6F207265626F6F742E- <1>
    15 00000116 2E2E00              <1>
    16 00000119 0A0D0A0D00          <1> .s1  db 0x0A, 0x0D, 0x0A, 0x0d, 0
    90                                  %include	"../modules/real/read_chs.s"
     1                              <1> read_chs:
     2 0000011E 55                  <1>             push  bp
     3 0000011F 89E5                <1>             mov   bp, sp
     4 00000121 6A03                <1>             push  3
     5 00000123 6A00                <1>             push  0
     6                              <1> 
     7 00000125 53                  <1>             push  bx
     8 00000126 51                  <1>             push  cx
     9 00000127 52                  <1>             push  dx
    10 00000128 06                  <1>             push  es
    11 00000129 56                  <1>             push  si
    12                              <1>             ;start process
    13 0000012A 8B7604              <1>             mov   si, [bp + 4]
    14                              <1> 
    15 0000012D 8A6C02              <1>             mov   ch, [si + drive.cyln + 0]
    16 00000130 8A4C03              <1>             mov   cl, [si + drive.cyln + 1]
    17 00000133 C0E106              <1>             shl   cl, 6
    18 00000136 0A4C06              <1>             or    cl, [si + drive.sect]
    19                              <1> 
    20                              <1>             
    21                              <1>             ;read sector
    22 00000139 8A7404              <1>             mov   dh, [si + drive.head]
    23 0000013C 8A14                <1>             mov   dl, [si + 0]
    24 0000013E B80000              <1>             mov   ax, 0x0000
    25 00000141 8EC0                <1>             mov   es, ax
    26 00000143 8B5E08              <1>             mov   bx, [bp + 8]
    27                              <1> 
    28                              <1> 
    29                              <1> 
    30                              <1> 
    31                              <1>            
    32                              <1> .10L: 
    33 00000146 B402                <1>       mov   ah, 0x02
    34 00000148 8A4606              <1>       mov   al,  [bp + 6]
    35                              <1> 
    36 0000014B CD13                <1>       int   0x13
    37 0000014D 7304                <1>       jnc   .11E
    38                              <1> 
    39 0000014F B000                <1>       mov   al, 0
    40 00000151 EB0C                <1>       jmp   .10E
    41                              <1> 
    42                              <1> 
    43                              <1> .11E:
    44 00000153 3C00                <1>      cmp   al, 0
    45 00000155 7508                <1>      jne   .10E
    46                              <1> 
    47                              <1> ;     mov   ax, 0
    48                              <1> ;     jne   .10E
    49                              <1> 
    50 00000157 B80000              <1>      mov   ax, 0
    51 0000015A FF4EFE              <1>      dec   word [bp -2]
    52 0000015D 75E7                <1>      jnz   .10L
    53                              <1> .10E:
    54                              <1> 
    55 0000015F B400                <1>       mov   ah,0
    56 00000161 5E                  <1>       pop   si
    57 00000162 07                  <1>       pop   es
    58 00000163 5A                  <1>       pop   dx
    59 00000164 59                  <1>       pop   cx
    60 00000165 5B                  <1>       pop   bx
    61                              <1> 
    62 00000166 89EC                <1>       mov   sp, bp
    63 00000168 5D                  <1>       pop   bp
    64                              <1> 
    65 00000169 C3                  <1>       ret
    66                              <1> 
    67                              <1> 
    68                              <1> 
    91                                  
    92                                  ;************************************************************************
    93                                  ;	ブートフラグ（先頭512バイトの終了）
    94                                  ;************************************************************************
    95 0000016A 00<rep 94h>             		times	510 - ($ - $$) db 0x00
    96 000001FE 55AA                    		db	0x55, 0xAA
    97                                  
    98                                  ;************************************************************************
    99                                  ;	リアルモード時に取得した情報
   100                                  ;************************************************************************
   101                                  FONT:											; フォント
   102 00000200 0000                    .seg:	dw	0
   103 00000202 0000                    .off:	dw	0
   104                                  
   105                                  ;************************************************************************
   106                                  ;	モジュール（先頭512バイト以降に配置）
   107                                  ;************************************************************************
   108                                  %include	"../modules/real/itoa.s"
     1                              <1> itoa:
     2 00000204 55                  <1> 	push	bp
     3 00000205 89E5                <1> 	mov	bp, sp
     4                              <1> 
     5 00000207 50                  <1> 	push	ax
     6 00000208 53                  <1> 	push	bx
     7 00000209 51                  <1> 	push	cx
     8 0000020A 52                  <1> 	push	dx
     9 0000020B 56                  <1> 	push	si
    10 0000020C 57                  <1> 	push	di
    11                              <1> 
    12 0000020D 8B4604              <1> 	mov	ax, [bp + 4]
    13 00000210 8B7606              <1> 	mov	si, [bp + 6]
    14 00000213 8B4E08              <1> 	mov	cx, [bp + 8]
    15                              <1> 
    16 00000216 89F7                <1> 	mov	di, si
    17 00000218 01CF                <1> 	add	di, cx
    18 0000021A 4F                  <1> 	dec	di
    19                              <1> 
    20 0000021B 8B5E0C              <1> 	mov	bx, word [bp + 12]
    21                              <1> 
    22 0000021E F7C30100            <1> 	test	bx, 0b0001
    23 00000222 7408                <1> .10Q:	je	.10E
    24 00000224 83F800              <1> 	cmp	ax, 0
    25 00000227 7D03                <1> .12Q:	jge	.12E
    26 00000229 83CB02              <1> 	or	bx, 0b0010
    27                              <1> .12E:
    28                              <1> .10E:
    29                              <1> 
    30 0000022C F7C30200            <1> 	test	bx, 0b0010
    31 00000230 7410                <1> .20Q:	je	.20E
    32 00000232 83F800              <1> 	cmp	ax, 0
    33 00000235 7D07                <1> .22Q:	jge	.22F
    34 00000237 F7D8                <1> 	neg	ax
    35 00000239 C6042D              <1> 	mov	[si], byte '-'
    36 0000023C EB03                <1> 	jmp	.22E
    37                              <1> .22F:
    38                              <1> 
    39 0000023E C6042B              <1> 	mov	[si], byte '+'
    40                              <1> .22E:
    41 00000241 49                  <1> 	dec	cx
    42                              <1> .20E:
    43                              <1> 
    44 00000242 8B5E0A              <1> 	mov	bx, [bp + 10]
    45                              <1> .30L:
    46                              <1> 
    47 00000245 BA0000              <1> 	mov	dx, 0
    48 00000248 F7F3                <1> 	div	bx
    49                              <1> 
    50                              <1> 
    51 0000024A 89D6                <1> 	mov	si, dx
    52 0000024C 8A94[7402]          <1> 	mov	dl, byte [.ascii + si]
    53                              <1> 
    54 00000250 8815                <1> 	mov	[di], dl
    55 00000252 4F                  <1> 	dec	di
    56                              <1> 
    57 00000253 83F800              <1> 	cmp	ax, 0
    58 00000256 E0ED                <1> 	loopnz	.30L
    59                              <1> .30E:
    60                              <1> 
    61 00000258 83F900              <1> 	cmp	cx, 0
    62 0000025B 740D                <1> .40Q:	je	.40E
    63 0000025D B020                <1> 	mov	al, ' '
    64 0000025F 837E0C04            <1> 	cmp	[bp + 12], word 0b0100
    65 00000263 7502                <1> .42Q:	jne	.42E
    66 00000265 B030                <1> 	mov	al, '0'
    67                              <1> .42E:
    68 00000267 FD                  <1> 	std
    69 00000268 F3AA                <1> 	rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 0000026A 5F                  <1> 	pop	di
    73 0000026B 5E                  <1> 	pop	si
    74 0000026C 5A                  <1> 	pop	dx
    75 0000026D 59                  <1> 	pop	cx
    76 0000026E 5B                  <1> 	pop	bx
    77 0000026F 58                  <1> 	pop	ax
    78                              <1> 
    79 00000270 89EC                <1> 	mov	sp, bp
    80 00000272 5D                  <1> 	pop	bp
    81                              <1> 
    82 00000273 C3                  <1> 	ret
    83                              <1> 
    84 00000274 303132333435363738- <1> .ascii	db	"0123456789ABCDEF"
    84 0000027D 39414243444546      <1>
   109                                  %include	"../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2 00000284 55                  <1>             push  bp
     3 00000285 89E5                <1>             mov   bp, sp
     4                              <1> 
     5 00000287 53                  <1>             push  bx
     6 00000288 51                  <1>             push  cx
     7 00000289 06                  <1>             push  es
     8 0000028A 56                  <1>             push  si
     9 0000028B 57                  <1>             push  di
    10                              <1>             ;start process
    11 0000028C 8B7604              <1>             mov   si,  [bp + 4]
    12                              <1> 
    13 0000028F B80000              <1>             mov   ax, 0
    14 00000292 8EC0                <1>             mov   es, ax
    15 00000294 89C7                <1>             mov   di, ax
    16                              <1> 
    17 00000296 B408                <1>             mov   ah, 0x08
    18 00000298 8A14                <1>             mov    dl, [si + drive.no]
    19 0000029A CD13                <1>             int   0x13
    20 0000029C 721B                <1> .10Q:       jc    .10F
    21                              <1> .10T:       
    22 0000029E 88C8                <1>             mov   al, cl
    23 000002A0 83E03F              <1>             and   ax, 0x3F
    24                              <1> 
    25 000002A3 C0E906              <1>             shr   cl, 6
    26 000002A6 C1C908              <1>             ror   cx, 8
    27 000002A9 41                  <1>             inc   cx
    28                              <1> 
    29 000002AA 0FB6DE              <1>             movzx  bx, dh
    30 000002AD 43                  <1>             inc    bx
    31                              <1> 
    32                              <1> 
    33                              <1>             
    34 000002AE 894C02              <1>             mov   [si + drive.cyln], cx
    35 000002B1 895C04              <1>             mov   [si + drive.head], bx
    36 000002B4 894406              <1>             mov   [si + drive.sect], ax
    37                              <1> 
    38 000002B7 EB03                <1>             jmp   .10E
    39                              <1> .10F:  
    40 000002B9 B80000              <1>             mov    ax, 0
    41                              <1> 
    42                              <1> .10E:  
    43                              <1>   
    44                              <1>      
    45                              <1> 
    46                              <1>   
    47 000002BC 5F                  <1>       pop   di
    48 000002BD 5E                  <1>       pop   si
    49 000002BE 07                  <1>       pop   es
    50 000002BF 59                  <1>       pop   cx
    51 000002C0 5B                  <1>       pop   bx
    52                              <1> 
    53 000002C1 89EC                <1>       mov   sp, bp
    54 000002C3 5D                  <1>       pop   bp
    55                              <1> 
    56 000002C4 C3                  <1>       ret
    57                              <1> 
    58                              <1> 
    59                              <1> 
   110                                  %include	"../modules/real/get_font_adr.s"
     1                              <1> get_font_adr:
     2 000002C5 55                  <1>             push  bp
     3 000002C6 89E5                <1>             mov   bp, sp
     4                              <1> 
     5 000002C8 50                  <1>             push  ax
     6 000002C9 53                  <1>             push  bx
     7 000002CA 56                  <1>             push  si
     8 000002CB 06                  <1>             push  es
     9 000002CC 55                  <1>             push  bp
    10                              <1>             
    11                              <1>             ;start process
    12 000002CD 8B7604              <1>             mov   si,  [bp + 4]
    13                              <1>             ;font
    14 000002D0 B83011              <1>             mov   ax, 0x1130
    15 000002D3 B706                <1>             mov   bh, 0x06
    16 000002D5 CD10                <1>             int   10h
    17                              <1>             ;fontaddress save
    18                              <1> 
    19                              <1> 
    20 000002D7 8C04                <1>             mov   [si + 0], es
    21 000002D9 896C02              <1>             mov   [si + 2], bp
    22                              <1>         
    23                              <1> 
    24                              <1> 
    25                              <1> 
    26                              <1>         
    27                              <1>   
    28 000002DC 5D                  <1>             pop   bp
    29 000002DD 07                  <1>             pop   es
    30 000002DE 5E                  <1>             pop   si
    31 000002DF 5B                  <1>             pop   bx
    32 000002E0 58                  <1>             pop   ax
    33                              <1> 
    34 000002E1 89EC                <1>             mov   sp, bp
    35 000002E3 5D                  <1>             pop   bp
    36                              <1> 
    37 000002E4 C3                  <1>             ret
    38                              <1> 
    39                              <1> 
    40                              <1> 
   111                                  
   112                                  ;************************************************************************
   113                                  ;	ブート処理の第2ステージ
   114                                  ;************************************************************************
   115                                  stage_2:
   116                                  		;---------------------------------------
   117                                  		; 文字列を表示
   118                                  		;---------------------------------------
   119 000002E5 68[5F03]E8D5FD83C4-     		cdecl	puts, .s0						; puts(.s0);
   119 000002ED 02                 
   120                                  
   121                                  		;---------------------------------------
   122                                  		; ドライブ情報を取得
   123                                  		;---------------------------------------
   124 000002EE 68[B800]E890FF83C4-     		cdecl	get_drive_param, BOOT			; get_drive_param(DX, BOOT.CYLN);
   124 000002F6 02                 
   125 000002F7 83F800                  		cmp		ax, 0							; if (0 == AX)
   126 000002FA 750C                    .10Q:	jne		.10E							; {
   127 000002FC 68[9603]E8BEFD83C4-     .10T:	cdecl	puts, .e0						;   puts(.e0);
   127 00000304 02                 
   128 00000305 E8D7FD                  		call	reboot							;   reboot(); // 再起動
   129                                  .10E:											; }
   130                                  
   131                                  		;---------------------------------------
   132                                  		; ドライブ情報を表示
   133                                  		;---------------------------------------
   134 00000308 A1[B800]                		mov		ax, [BOOT + drive.no]			; AX = ブートドライブ;
   135 0000030B 6A046A106A0268-         		cdecl	itoa, ax, .p1, 2, 16, 0b0100	; 
   135 00000312 [7703]50E8ECFE83C4-
   135 0000031A 0A                 
   136 0000031B A1[BA00]                		mov		ax, [BOOT + drive.cyln]			; 
   137 0000031E 6A046A106A0468-         		cdecl	itoa, ax, .p2, 4, 16, 0b0100	; 
   137 00000325 [7F03]50E8D9FE83C4-
   137 0000032D 0A                 
   138 0000032E A1[BC00]                		mov		ax, [BOOT + drive.head]			; AX = ヘッド数;
   139 00000331 6A046A106A0268-         		cdecl	itoa, ax, .p3, 2, 16, 0b0100	; 
   139 00000338 [8903]50E8C6FE83C4-
   139 00000340 0A                 
   140 00000341 A1[BE00]                		mov		ax, [BOOT + drive.sect]			; AX = トラックあたりのセクタ数;
   141 00000344 6A046A106A0268-         		cdecl	itoa, ax, .p4, 2, 16, 0b0100	; 
   141 0000034B [9103]50E8B3FE83C4-
   141 00000353 0A                 
   142 00000354 68[6E03]E866FD83C4-     		cdecl	puts, .s1
   142 0000035C 02                 
   143                                  
   144                                  		;---------------------------------------
   145                                  		; 次のステージへ移行
   146                                  		;---------------------------------------
   147 0000035D EB52                    		jmp		stage_3rd						; 次のステージへ移行
   148                                  
   149                                  		;---------------------------------------
   150                                  		; データ
   151                                  		;---------------------------------------
   152 0000035F 326E64207374616765-     .s0		db	"2nd stage...", 0x0A, 0x0D, 0
   152 00000368 2E2E2E0A0D00       
   153                                  
   154 0000036E 2044726976653A3078      .s1		db	" Drive:0x"
   155 00000377 20202C20433A3078        .p1		db	"  , C:0x"
   156 0000037F 202020202C20483A30-     .p2		db	"    , H:0x"
   156 00000388 78                 
   157 00000389 20202C20533A3078        .p3		db	"  , S:0x"
   158 00000391 20200A0D00              .p4		db	"  ", 0x0A, 0x0D, 0
   159                                  
   160 00000396 43616E277420676574-     .e0		db	"Can't get drive parameter.", 0
   160 0000039F 206472697665207061-
   160 000003A8 72616D657465722E00 
   161                                  
   162                                  ;************************************************************************
   163                                  ;	ブート処理の第3ステージ
   164                                  ;************************************************************************
   165                                  stage_3rd:
   166                                  		;---------------------------------------
   167                                  		; 文字列を表示
   168                                  		;---------------------------------------
   169 000003B1 68[F403]E809FD83C4-     		cdecl	puts, .s0
   169 000003B9 02                 
   170                                  
   171                                  		;---------------------------------------
   172                                  		; プロテクトモードで使用するフォントは、
   173                                  		; BIOSに内蔵されたものを流用する
   174                                  		;---------------------------------------
   175 000003BA 68[0002]E805FF83C4-     		cdecl	get_font_adr, FONT				; // BIOSのフォントアドレスを取得
   175 000003C2 02                 
   176                                  
   177                                  		;---------------------------------------
   178                                  		; フォントアドレスの表示
   179                                  		;---------------------------------------
   180 000003C3 6A046A106A0468-         		cdecl	itoa, word [FONT.seg], .p1, 4, 16, 0b0100
   180 000003CA [1104]FF36[0002]E8-
   180 000003D1 31FE83C40A         
   181 000003D6 6A046A106A0468-         		cdecl	itoa, word [FONT.off], .p2, 4, 16, 0b0100
   181 000003DD [1604]FF36[0202]E8-
   181 000003E4 1EFE83C40A         
   182 000003E9 68[0304]E8D1FC83C4-     		cdecl	puts, .s1
   182 000003F1 02                 
   183                                  
   184                                  		;---------------------------------------
   185                                  		; 処理の終了
   186                                  		;---------------------------------------
   187 000003F2 EBFE                    		jmp		$								; while (1) ; // 無限ループ
   188                                  
   189                                  		;---------------------------------------
   190                                  		; データ
   191                                  		;---------------------------------------
   192 000003F4 337264207374616765-     .s0:	db	"3rd stage...", 0x0A, 0x0D, 0
   192 000003FD 2E2E2E0A0D00       
   193                                  
   194 00000403 20466F6E7420416464-     .s1:	db	" Font Address="
   194 0000040C 726573733D         
   195 00000411 5A5A5A5A3A              .p1:	db	"ZZZZ:"
   196 00000416 5A5A5A5A0A0D00          .p2:	db	"ZZZZ", 0x0A, 0x0D, 0
   197 0000041D 0A0D00                  		db	0x0A, 0x0D, 0
   198                                  
   199                                  ;************************************************************************
   200                                  ;	パディング
   201                                  ;************************************************************************
   202 00000420 00<rep 1BE0h>           		times BOOT_SIZE - ($ - $$)		db	0	; パディング
   203                                  
