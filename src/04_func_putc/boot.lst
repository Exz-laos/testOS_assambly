     1                                  
     2                                          BOOT_LOAD equ 0x7c00
     3                                          ORG    BOOT_LOAD
     4                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     %rep  %0 - 1
     3                              <1>         push   %{-1:-1}
     4                              <1>         %rotate -1
     5                              <1>     %endrep
     6                              <1>     %rotate -1
     7                              <1>         call    %1
     8                              <1>     %if 1 < %0
     9                              <1>         add    sp,(__BITS__>>3)*(%0 - 1)
    10                              <1>     %endif
    11                              <1> 
    12                              <1> %endmacro
     5                                  entry: 
     6 00000000 EB58                            jmp   ipl          ;IPL jump
     7 00000002 90<rep 58h>                     times 90 - ($ - $$) db 0x90 ;
     8                                  
     9                                  ipl:    
    10 0000005A FA                              cli
    11 0000005B B80000                          mov   ax, 0x0000
    12 0000005E 8ED8                            mov   ds, ax
    13 00000060 8EC0                            mov   es, ax
    14 00000062 8ED0                            mov   ss, ax
    15 00000064 BC007C                          mov   sp, BOOT_LOAD
    16 00000067 FB                              sti
    17                                         
    18 00000068 8816[8600]                      mov   [BOOT.DRIVE], dl
    19 0000006C 6A58E8170083C402                cdecl  putc, word 'X'
    20 00000074 6A59E80F0083C402                cdecl  putc, word 'Y'
    21 0000007C 6A5AE8070083C402                cdecl  putc, word 'Z'
    22                                  
    23                                  
    24 00000084 EBFE                            jmp   $           ; while(1);
    25                                  
    26                                  ALIGN 2, db 0
    27                                  BOOT:
    28 00000086 0000                    .DRIVE: dw 0
    29                                  %include "../modules/real/putc.s"
     1                              <1> putc:
     2                              <1> 
     3 00000088 55                  <1>       push   bp
     4 00000089 89E5                <1>       mov    bp, sp
     5                              <1> 
     6 0000008B 50                  <1>       push   ax
     7 0000008C 53                  <1>       push   bx
     8                              <1>       
     9 0000008D 8A4604              <1>       mov    al, [bp + 4]
    10 00000090 B40E                <1>       mov    ah, 0x0E
    11 00000092 BB0000              <1>       mov    bx, 0x0000
    12 00000095 CD10                <1>       int    0x10
    13                              <1> 
    14                              <1> 
    15 00000097 5B                  <1>       pop    bx
    16 00000098 58                  <1>       pop    ax
    17                              <1> 
    18 00000099 89EC                <1>       mov    sp, bp    ;
    19 0000009B 5D                  <1>       pop    bp
    20 0000009C C3                  <1>       ret
    30                                  
    31 0000009D 00<rep 161h>                    times   510 - ($ - $$) db 0x00
    32 000001FE 55AA                            db      0x55, 0xAA
    33                                         
    34                                         
    35                                   
