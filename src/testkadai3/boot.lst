     1                                  BOOT_LOAD equ 0x7c00
     2                                          ORG    BOOT_LOAD
     3                                  
     4                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     %rep  %0 - 1
     3                              <1>         push   %{-1:-1}
     4                              <1>         %rotate -1
     5                              <1>     %endrep
     6                              <1>     %rotate -1
     7                              <1>         call    %1
     8                              <1>     %if 1 < %0
     9                              <1>         add    sp,(__BITS__>>3)*(%0 - 1)
    10                              <1>     %endif
    11                              <1> 
    12                              <1>     
    13                              <1> 
    14                              <1> %endmacro
    15                              <1> 
     5                                  
     6                                  entry: 
     7 00000000 EB58                            jmp   ipl          ;IPL jump
     8 00000002 90<rep 58h>                     times 90 - ($ - $$) db 0x90 ;
     9                                  ipl:    
    10 0000005A FA                              cli
    11 0000005B B80000                          mov   ax, 0x0000
    12 0000005E 8ED8                            mov   ds, ax
    13 00000060 8EC0                            mov   es, ax
    14 00000062 8ED0                            mov   ss, ax
    15 00000064 BC007C                          mov   sp, BOOT_LOAD
    16 00000067 FB                              sti
    17                                         
    18 00000068 8816[8C00]                      mov   [BOOT.DRIVE], dl
    19                                  
    20                                  .LOOP:  
    21 0000006C 68[8500]E81C0083C4-             cdecl puts, .s0    ; Display "Hoge"
    21 00000074 02                 
    22                                          
    23 00000075 B401                            mov   ah, 0x01     ; BIOS Function: Check for keystroke
    24 00000077 CD16                            int   0x16         ; Call BIOS keyboard interrupt
    25 00000079 74F1                            jz    .LOOP        ; If no key pressed (ZF=1), continue loop
    26                                          
    27 0000007B B400                            mov   ah, 0x00     ; BIOS Function: Get keystroke
    28 0000007D CD16                            int   0x16         ; Read the key
    29                                          
    30 0000007F 3C0D                            cmp   al, 0x0D     ; Compare with Enter key (0x0D)
    31 00000081 75E9                            jne   .LOOP        ; If not Enter, continue loop
    32                                          
    33                                         ; cdecl puts, .s1    ; Display end message
    34                                          
    35                                         ; jmp   $            ; Infinite loop to show we're done
    36 00000083 CD19                           int 0x19
    37                                  
    38 00000085 486F67650A0D00          .s0     db "Hoge", 0x0A, 0x0D, 0
    39                                  ;.s1     db "Program ended!", 0x0A, 0x0D, 0
    40                                  
    41                                  ALIGN 2, db 0
    42                                  BOOT:
    43 0000008C 0000                    .DRIVE: dw 0
    44                                  
    45                                  %include "../modules/real/puts.s"
     1                              <1> 
     2                              <1> puts:
     3                              <1> 
     4 0000008E 55                  <1>       push   bp
     5 0000008F 89E5                <1>       mov    bp, sp
     6                              <1> 
     7 00000091 50                  <1>       push   ax
     8 00000092 53                  <1>       push   bx
     9 00000093 56                  <1>       push   si
    10                              <1>       
    11 00000094 8B7604              <1>       mov    si, [bp + 4]
    12                              <1> 
    13 00000097 B40E                <1>       mov    ah, 0x0E
    14 00000099 BB0000              <1>       mov    bx, 0x0000
    15 0000009C FC                  <1>       cld
    16                              <1> .10L:
    17 0000009D AC                  <1>       lodsb
    18                              <1> 
    19 0000009E 3C00                <1>       cmp    al, 0
    20 000000A0 7404                <1>       je     .10E
    21                              <1> 
    22 000000A2 CD10                <1>       int    0x10
    23 000000A4 EBF7                <1>       jmp    .10L
    24                              <1> .10E:
    25                              <1> 
    26 000000A6 5E                  <1>       pop    si
    27 000000A7 5B                  <1>       pop    bx
    28 000000A8 58                  <1>       pop    ax
    29                              <1> 
    30 000000A9 89EC                <1>       mov    sp, bp    
    31 000000AB 5D                  <1>       pop    bp
    32                              <1>       
    33 000000AC C3                  <1>       ret
    46                                  
    47 000000AD 00<rep 151h>                    times   510 - ($ - $$) db 0x00
    48 000001FE 55AA                            db      0x55, 0xAA
